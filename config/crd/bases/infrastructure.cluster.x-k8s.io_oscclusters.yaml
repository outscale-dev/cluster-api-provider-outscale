---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: oscclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: OscCluster
    listKind: OscClusterList
    plural: oscclusters
    singular: osccluster
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: OscCluster is the Schema for the oscclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OscClusterSpec defines the desired state of OscCluster
            properties:
              network:
                properties:
                  internetService:
                    properties:
                      name:
                        type: string
                      resourceId:
                        type: string
                    type: object
                  loadBalancer:
                    properties:
                      healthCheck:
                        properties:
                          checkinterval:
                            format: int32
                            type: integer
                          healthythreshold:
                            format: int32
                            type: integer
                          port:
                            format: int32
                            type: integer
                          protocol:
                            type: string
                          timeout:
                            format: int32
                            type: integer
                          unhealthythreshold:
                            format: int32
                            type: integer
                        required:
                        - protocol
                        type: object
                      listener:
                        properties:
                          backendport:
                            format: int32
                            type: integer
                          backendprotocol:
                            type: string
                          loadbalancerport:
                            format: int32
                            type: integer
                          loadbalancerprotocol:
                            type: string
                        required:
                        - loadbalancerprotocol
                        type: object
                      loadbalancername:
                        type: string
                      subregionname:
                        type: string
                    type: object
                  natService:
                    properties:
                      name:
                        type: string
                      publicipname:
                        type: string
                      resourceId:
                        type: string
                      subnetname:
                        type: string
                    type: object
                  net:
                    properties:
                      ipRange:
                        type: string
                      name:
                        type: string
                      resourceId:
                        type: string
                    type: object
                  publicIps:
                    items:
                      properties:
                        name:
                          type: string
                        resourceId:
                          type: string
                      type: object
                    type: array
                  routeTables:
                    items:
                      properties:
                        name:
                          type: string
                        resourceId:
                          type: string
                        routes:
                          items:
                            properties:
                              destination:
                                type: string
                              name:
                                type: string
                              resourceId:
                                type: string
                              targetName:
                                type: string
                              targetType:
                                type: string
                            type: object
                          type: array
                        subnetname:
                          type: string
                      type: object
                    type: array
                  subnets:
                    items:
                      properties:
                        ipSubnetRange:
                          type: string
                        name:
                          type: string
                        resourceId:
                          type: string
                      type: object
                    type: array
                type: object
            type: object
          status:
            description: OscClusterStatus defines the observed state of OscCluster
            properties:
              conditions:
                description: Conditions provide observations of the operational state
                  of a Cluster API resource.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              network:
                properties:
                  LoadbalancerRef:
                    properties:
                      resourceMap:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  internetserviceref:
                    properties:
                      resourceMap:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  linkroutetableref:
                    properties:
                      resourceMap:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  natref:
                    properties:
                      resourceMap:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  netref:
                    properties:
                      resourceMap:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  publicipref:
                    properties:
                      resourceMap:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  routeref:
                    properties:
                      resourceMap:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  routetableref:
                    properties:
                      resourceMap:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  subnetref:
                    properties:
                      resourceMap:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                type: object
              ready:
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
